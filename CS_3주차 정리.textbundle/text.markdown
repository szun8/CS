# 1.5 가상메모리
### 최대한 메모리를 잘 사용해서 동시에 많은 프로그램을 실행
![](assets/3B992F55-E1D8-40A2-94B0-86D7D8B75350.png)

## 의미

### 프로세스의 일부만을 메모리에 적재하고 나머지는 디스크에 둔 상태로 필요할 때만 스와핑하는 방식으로 프로세스를 실행하는 방식
- 하나의 프로세스는 여러 페이지로 구분을 해놓기에 core process part만 ram에 적재하기만 하면 프로그램 실행에 전혀 문제가 없다 !

## 장점

### 메모리 크기에 대한 제약 감소

### CPU이용률
- CPU를 놀리지 않고 계속 사용되게

### CPU처리율
- 단위 시간당 실행한 프로세스 수

### 필요한 영역만 메모리 로드해 스와핑 횟수를 줄여서 프로그램 실행 속도를 높일 수 있다

## 요구 페이징

### 프로세스에서 필요한 페이지만 메모리에 로드하는 방식

### 페이지 폴트
- 물리 메모리에 필요한 페이지가 없을 때를 일컫음
- 발생 시, 필요한 페이지에 대해 스왑인을 진행
- 페이지 교체 알고리즘
	- 요청해서 받아온 필요 페이지를 저장할 물리 메모리 영역이 없는 경우 진행
![](assets/09EDB733-1688-43EE-A898-9F38C4A48248.jpg)

## 스레싱

### 동시에 일정 수 이상의 프로그램을 실행했을 때 오히려 CPU이용률이 떨어지는 상황
- 워낙 많은 프로세스가 적재되어있서 프로그램을 돌릴 수 있을 정도의 최소한의 프로세스 일부만을 가지고와있는 상태라 원하는 기능을 수행하기 위해서는 페이지폴트가 필연적으로 발생하게 됨
- 이때 스와핑하는 오버헤드가 오히려 다중 프로그래밍의 효율보다 커지는 결과를 초래하기 때문

### 워킹세트
- 지역성을 기반으로 자주 사용하는 페이지를 저장해두는 것

# 1.6 캐시메모리
## 목적
cpu와 메인 메모리간의 데이터 접근 시간을 줄이기 위해

## 지역성
CPU가 자주 참조하는 데이터가 고르게 분포되어 있지 않고 특정 부분에 몰려있는 것
- 캐시적중률
- 종류
	- 시간지역성
	- 공간지역성

## 매핑 방식

### 직접 매핑
- 메인 메모리를 일정 크기로 나누고 각 영역을 캐시메모리에 매핑하는 방식

### 연관 매핑
- 어떠한 규칙없이 매핑

### 집합연관 매핑
- 직접+연관
- v개의 블록과 하나의 블록안에 k개의 라인의 구성인 구조
- 직접 = 지정한 블록 인덱스
- 연관 = 지정된 블록내부에서 아무데나

# 2.1 네트워크 계층
## OSI 7계층
네트워크 통신이 이뤄지는 과정을 7단계로 나눈 네트워크 표준 모델

### 데이터 캡슐화
- 각 계층의 제어 정보를 담은 (헤더 || 트레일러)가 캡슐화에 덧붙여짐
- 송신부의 계층과 수신부의 계층끼리 의 데이터 호환성

### 프로토콜
- 데이터 송수신을 위해 정해진 규칙

### 계층 설명
- 7계층 응용 계층
	- http, FTP등의 프로토콜을 응용 프로그램의 UI를 통해 제공
- 6계층 표현 계층
	- 데이터를 표준화된 형식으로 변경
- 5계층 세션 계층
	- 세션의 유지 및 해제 등 응용 프로그램 간 통신 제어와 동기화
- 4계층 전송 계층
	- 신뢰성 있는 데이터를 전달하기 위한 계층
		- 전송방식 = TCP, UDP
		- port번호
- 3계층 네트워크 계층
	- 송신부에서 수신부까지 보내기 위한 최적의 경로를 선택하는 라우팅을 수행
		- 라우트 : 최적의 경로
		- 라우터
			- 네트워크와끼리 연결해주는 장비
- 2계층 데이터 링크 계층
	- 데이터 흐름관리 및 데이터의 오류 검출 및 복구등을 수행
		- 브리지,스위치
	- 트레일러가 붙어 물리계층으로 넘어간다
- 1계층 물리 계층
	- 데이터를 2진수로 변환 후 장비를 사용해 전송하거나 수신된 2진수 데이터를 복원
		- 리피터,허브

![](assets/D89300AA-BCDC-4BC6-AAB1-6D5C40036CFB.png)

## TCP/IP 4계층
### TCP
- 패킷의 전송여부와 전송순서를 보장하는 통신방식

### IP
- 이러한 패킷을 빠르게 보내기 위한 통신방식

### 계층 설명
- 4계층 응용 계층
	- 사용자와 소프트웨어를 연결해주는 계층
	- HTTP(s), DNS
- 3계층 전송 계층
	- 데이터의 신뢰성을 보장하며 포트번호로 데이터를 적절한 응용프로그램에 전달하는 역할
	- 세그먼트
- 2계층 인터넷 계층
	- 데이터를 최종목적지까지 도달할 수 있게하는 계층
	- 패킷 || 데이터그램
- 1계층 네트워크 인터페이스 계층
	- 데이터를 전기신호(0,1)로 변환하고 mac주소를 사용해 기기에 데이터를 전달
		- 이더넷 : 유선접속
		- 와이파이 : 무선접속
		
- 여기서 mac 주소란? Media Access Control Address
![](assets/C8EB7E46-9C30-44DC-9F8D-3428FAE995AB.png)

## IP 심화

### IPv4 vs IPv6
- 주소 부족문제로 ver6가 나오게 된 것
- ver4는 8자리 2진수 4개를 10진수로 표현한 것
- ver6는 16자리 2진수 8개를 16진수로 표현한 것

### 네트워크부
- 모든 Host들을 관리하기 힘들기에 한 네트워크 범위를 지정한 집합체

### 호스트부
- 하나의 네트워크 안에 존재하는 호스트들

### 접근 제한자
- public
	- ISP로 부터 회선을 구매해 할당받은 인터넷 주소 unique
- private
	- 라우터에 의해 할당되는 로컬 인터넷 주소
![](assets/7F3C1FFB-7C79-4FDB-8E04-E745E4554461.png)
	- IP 절약 효과
		- 다만 콘솔 멀티 게임의 경우,  
		  잘 매칭이 안되는 상황이 발생할 수 있다.
	- 공인 IP를 사설 IP로 바꾸는 시스템 = NAT
- lookback
	- localhost

### 서브넷 마스크
- 서브넷을 만들기위해 사용되는 것
- 서브넷 마스크 & IP 주소 = 네트워크 주소

### 클래스
- 클래스별로 할당받을 수 있는 호스트의 수가 존재
	- class A
		- 범위 0~127
		- 서브넷 마스크 255.0.0.0
	- class B
		- 범위 128~191
		- 서브넷 마스크 255.255.0.0
	- class C
		- 범위 192~223
		- 서브넷 마스크 255.255.255.0

### CIDR
- 서브넷 마스크의 1의 갯수를 IP주소와 함께 표현하는 표현 방법
	- **115.95.229.0/28** 
- Classless Inter Domain Routing
	- a.k.a. prefix 표기법

### 서브네팅
- 원본 네트워크를 여러 서브넷으로 분리하는 과정
- 하나의 네트워크의 자원 낭비 최소화
- IP주소를 할당할 때 하나의 네트워크에 분배된 호스트 수를 줄이는 대신 더 많은 네트워크를 사용하기 위해 (=더 많은 기업) 고안됨

### 네트워크 주소
- 전체에서 일부를 식별하기 위해 사용
- ex) x.x.x.0

### 브로드 캐스트 주소
- 하나의 네트워크에 있는 모든 호스트에 데이터를 동시에 보닐 때 사용되는 특수 IP주소
- ex) x.x.x.255

### 게이트 웨이 주소
- Inter Domain에서 다른 Domain으로 나가기 위한 🚪대문의 주소
![](assets/483DED71-9C9A-49C3-B9AC-62439B2E4C82.png)
